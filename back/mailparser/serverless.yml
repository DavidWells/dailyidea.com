service: 'dailyidea-mail-processing'

custom:
  serverless-offline:
    port: 4000
  dynamodb:
    start:
      port: 8001
      inMemory: true
      migrate: true

functions:
  parseIncomingMail:
    handler: mailparser.handler

plugins:
  - serverless-babel-plugin
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: 'aws'
  runtime: 'nodejs8.10'
  stage: ${env:STAGE, 'dev'}
  region: ${env:AWS_REGION, 'us-east-1'}
  environment:
    AWS_DEPLOY_REGION: ${self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["IdeasTable", "Arn" ] }
        - { "Fn::Join": [ "/", [
            { "Fn::GetAtt": ["IdeasTable", "Arn" ] }, "index", "userIndex"
          ]]}
        - { "Fn::Join": [ "/", [
            { "Fn::GetAtt": ["IdeasTable", "Arn" ] }, "index", "ideaIndex"
          ]]}

resources:
  - ${file(resources/dynamo-user-table.yml)}
  Resources:
    CustomUserOnboardingRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: CustomUserOnboardingRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: CustomCloudWatchLogsPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:logs'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'log-group:/aws/lambda/*:*:*'
          - PolicyName: CustomUserOnboardingPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
                  Resource:
                    - 'Fn::Join':
                        - ':'
                        - - 'arn:aws:dynamodb'
                          - Ref: 'AWS::Region'
                          - Ref: 'AWS::AccountId'
                          - 'table/${self:custom.usersTableName}'
